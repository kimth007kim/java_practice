Static(정적멤버)
사용하는 이유?
-객체를 생성하지 않아도 변수에 접근이 가능하다 .
-클래스의 로딩이 끝나면 바로 사용이 가능하다.
-따라서 메모리효율면에서 좋다.

final(최종필드)
-final이 선언된 메소드는 자식 클래스에서 재정의 하려할때 컴파일 오류가 발생합니다.
클래스를 구현시 명시적으로 OVerride Method를 막고 싶을때 사용하면 좋다.
-수정하면 안되거나 수정할 필요가 없는값을 final을 주는것이 보편적이다.

7.1 상속

현실에서 상속은 부모가 자식에게 물려주는 행위를 말한다.
객체지향프로그램에서도 부모클래스의 멤버를 자식 클래스에게 물려줄수 있다.

상속을 해도 부모클래스의 모든 필드와 메소드들을 물려받는것은 아니다. 부모클래스에서 private
접근 제한을 갖는 필드와 메소드는 상속 대상에서 제외된다.


상속을 왜 사용할까?
이미 잘 개발된 클래스를 재사용해서 새로운 클래스를 만들기 때문에 코드의 중복을 줄여준다.

사용하는 법은?
class  자식 클래스 extends 부모클래스1{}

7.3 부모 생성자 호출
super()를 사용한다. 매개변수에다가 원래 생성자의 매개값을 입력 해주면 된다.


7.4 메소드 재정의(Method Override)(@Override)
정의: 부모클래스의 모든 메소드가 자식 클래스에게 맞게 설계되어있다면 가장 이상적인 상속이지만,
어떤 메소드는 자식 클래스가 사용하기에 적합하지 않을수도있다. 이경우 상속된 일부 메소드는 자식클래스에서 다시 수정해서 사용해야 한다.

7.4.2 부모 메소드 호출(super)

사용하는 방법
super.부모메소드
