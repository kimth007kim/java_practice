6.객체지향프로그래밍

6.1.1 객체란?
-물리적으로 존재하거나 추상적으로 생각할수 있는 것 중에서 자신의 속성을 가질수 있고 다른것과 식별가능한것을 말한다.
예를들어 사람과 자동차가 예시로 들수있다. 객체는 속성과 동작으로 구성되어 있다, (걷다 멈춘다, 달린다 등등의 동작)
자바에서는 이 속성과 동작들을 각각 필드(field)와 메소드(method)라고 부른다.

6.1.4 객체 지향 프로그래밍의 특징
객체 지향 프로그래밍의 특징으로는 캡슐화, 상속, 다형성을 들 수있다. 

-1.캡슐화
객체의 필드 메소드를 하나로 묶고, 실제 구현 내용을 감추는것을 말한다. 외부객체는 객체의 내부의 구조를 알지 못하며 객체가 노출해서 제공하는 필드와 메소드만 이용할수 있다,
자바 언어는 캡슐화된 멤버를 노출 시킬것인지, 숨길것인지를 결정하기위해 접근 제한자를 사용한다. 접근 제한자는 객체의 필드와 메소드의 사용범위를 제한함으로써 외부로 부터 보호한다.

-2.상속
부모객체가 자식객체에게 자신이 가지고있는 필드와 메소드를 물려준다. 
상속은 상위객체를 재사용해서 자식객체를 쉽고 빨리 설계할수 있도록 도와준다. 코드의 중복도 줄여준다. 유지보수 시간을 최소화 시킨다.

-3.다형성
같은 타입이지만 실행결과가 다양한 객체를 이용할수있는 성질을 말한다.


6.2 객체와 클래스

객체를 생성하는 순서
1.클래스를 설계해야한다.
2.설계된 클래스를 가지고 사용할 객체를 생성해야한다.
3.생성된 객체를 이용하기


6.3 클래스선언
사용하고자 하는 객체를 구상했다면, 그객체의 대표이름을 하나호 결정하고 이것을 클래스 이름이라고한다.

6.4객체 생성과 클래스 변수
클래스를 선언한다음 컴파일 했다면 객체를 생성할 설계도가 만들어진 셈이다. 클래스로부터 객체를 생성하는 방법은 다음과 같이 new 연산자를 사용하면된다.

6.5 클래스의 구성멤버
필드,생성자,메소드
필드: 객체의 고유데이터,부품객체,상태정보등을제공 선언형태는 변수와 비슷하지만, 필드를 변수라고 부르지않는다. 변수는 생성자와 메소드 내에서만 사용되고 생성자와 메소드가 실행종료되면
자동 소멸한다. 하지만 필드는 생성자와 메소드 전체에서 사용되며 객체가 소멸되지 않는 한 객체와 함꼐 존재한다.

생성자: new 연산자로 호출되는 특별한 중괄호 {} 블록이다. 생성자의 역할은 객체 생성 시 초기화를 담당한다. 필드를 초기화 하거나, 메소드를 호출해서 객체를 사용할 준비를 한다. 생성자는 메소드와 
비슷하게 생겼지만, 클래스 이름으로 되어있고 리턴타입이없다.

메소드: 객체의 동작에 해당하는 중괄호 {] 블록을 말한다. 중괄호 블록은 이름을 가지고 있는데, 이것이 메소드의 이름이다. 메소드는 필드를 읽고 수정하는 역할도 하지만, 다른객체를 생성해서 다양한 기능을 수행하기도 한다.
메소드는 객체간의 데이터 전달의 수단으로 사용된다. 외부로 부터 매개값을 받을수도 있고, 실행후 어떤값을 리턴할 수도 있다.

6.7.4 생성자 오버로딩

외부에서 제공되는 다양한 데이터들을 이용해서 객체를 초기화 하려면 생성자도 다양화 될 필요가 있다.
생성자 오버로딩이란 매개변수를 달리하는 생성자를 여러개로 선언하는것을 말한다.

6.8 메소드